{"version":3,"file":"static/js/449.6da19307.chunk.js","mappings":"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","sources":["Pages/ADMINPAGES/Login.jsx","hooks/FormDataHoook.js","utils/BaseUrl.js","utils/apis.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport logo from '../../assets/logo.png'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginAuth } from '../../App/AuthSlice';\r\nimport { useFormPost } from '../../hooks/FormDataHoook';\r\nimport { UserUrls } from '../../utils/apis';\r\n\r\nconst Login = () => {\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [ErrorMsg, setErrorMsg] = useState('');\r\n    const [loading, setloading] = useState(false);\r\n    const formPost = useFormPost();\r\n    const navigate = useNavigate();\r\n    const dispatch =  useDispatch()\r\n\r\n    const handleSubmit = async (event) => {\r\n        localStorage.clear()\r\n        event.preventDefault();\r\n        const body = {\r\n          username: email,\r\n          password: password\r\n        };\r\n        setloading(true)\r\n        try {\r\n    \r\n          const response = await formPost.post({\r\n            url: UserUrls.userLogin,\r\n            data: body,\r\n            login:true\r\n          });\r\n\r\n          console.log(response);\r\n          const localStorageUser = {id:response.user, role:response.user.role}\r\n    \r\n          localStorage.setItem(\"user\", JSON.stringify(localStorageUser));\r\n          const userdata = {user:response.user, token:response.token}\r\n          localStorage.setItem(\"token\", response.token);\r\n          dispatch(loginAuth({ ...userdata }));\r\n          setemail(\"\");\r\n          setpassword(\"\");\r\n    \r\n          if (response) {\r\n            navigate(\"/acts/admin/AdminHome\");\r\n          } else {\r\n            navigate(\"/account\");\r\n          }\r\n\r\n    \r\n        } catch (error) {\r\n            \r\n          if (!error?.respose) {\r\n            setErrorMsg(\"No server respose or invalid login credentials try again!\");\r\n          } else if (error.respose?.status === 400) {\r\n            setErrorMsg(\"incorrect password or email \");\r\n          } else {\r\n            setErrorMsg(\"login failed try again later\");\r\n          }\r\n        }\r\n        setloading(false)\r\n      };\r\n   \r\n  return (\r\n    <div>\r\n        <section className=\"bg-gray-50 dark:bg-gray-900\">\r\n  <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\r\n      <a href=\"#\" className=\"flex items-center mb-6 text-2xl font-semibold text-gray-900 \">\r\n          <img className=\"w-8 h-8 mr-2\" src={logo} alt=\"logo\"/>\r\n          Acts    \r\n      </a>\r\n      <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 \">\r\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\r\n              <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n                  Sign in to  Acts admin\r\n              </h1>\r\n              <h3 className='text-red-700'>{ErrorMsg}</h3>\r\n              <form className=\"space-y-4 md:space-y-6\" action=\"#\" onSubmit={handleSubmit}>\r\n                  <div>\r\n                      <label for=\"email\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Your username</label>\r\n                      <input type=\"text\" name=\"email\" id=\"email\" className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5\" placeholder=\"name\" required\r\n                           value={email}\r\n                           onChange={(e) => setemail(e.target.value)}\r\n                      />\r\n                  </div>\r\n                  <div>\r\n                      <label for=\"password\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Password</label>\r\n                      <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\" className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 \" required\r\n                           value={password}\r\n                           onChange={(e) => setpassword(e.target.value)}\r\n                      />\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-start\">\r\n                          <div className=\"flex items-center h-5\">\r\n                            <input id=\"remember\" aria-describedby=\"remember\" type=\"checkbox\" className=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 \" required />\r\n                          </div>\r\n                          <div className=\"ml-3 text-sm\">\r\n                            <label for=\"remember\" className=\"text-gray-500 dark:text-gray-300\">Remember me</label>\r\n                          </div>\r\n                      </div>\r\n                      {/* <a href=\"#\" className=\"text-sm font-medium text-primary-600 hover:underline \">Forgot password?</a> */}\r\n                  </div>\r\n                  <button type=\"submit\" className=\"w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center bg-purple-500\">\r\n                    \r\n                    {loading? \"Signing in...\" : \"Sign in\"}</button>\r\n              </form>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import { useState } from \"react\"\r\nimport { selectCurrentToken } from \"../App/AuthSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nexport const useFormManager =  (initialState) => {\r\n    const [formState, setFormState] = useState(initialState);\r\n\r\n    const changeHandler = (event) => {\r\n        setFormState({\r\n            ...formState,\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    const elementChangeHandler = (name, value) => {\r\n        setFormState({\r\n            ...formState,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const reset = () => setFormState(initialState);\r\n\r\n    return { changeHandler, elementChangeHandler, reset, formState };\r\n}\r\n\r\n\r\nexport const useFormPost = () => {\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(selectCurrentToken);\r\n\r\n    const post = async ({url, response, data, login=false}) => {\r\n\r\n        const requestHeader = {\r\n            headers: {\r\n                Authorization: \"Bearer \"  + token,\r\n                // Authorization: \"Token \"  + token,\r\n              }\r\n\r\n        }\r\n\r\n        const requestBody = {\r\n\r\n            data: data,\r\n            // userId: userId\r\n        }\r\n        const request = {\r\n            body: requestBody\r\n        }\r\n\r\n        let message = \"\";\r\n        let severity = \"info\";\r\n\r\n        try {\r\n            await axios.post(url, data)\r\n            .then((res) => {\r\n                if(res.status === 200){\r\n                    response = res.data;\r\n                    severity = response.header.responseStatus;\r\n                    message = response.header.responseMessage;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                // throw error.message;\r\n            });\r\n        } catch (error) {\r\n            // throw error.message;\r\n        }\r\n\r\n\r\n        return response;\r\n    }\r\n\r\n    const put = async ({url, response, data}) => {\r\n\r\n        const requestHeader = {\r\n            headers: {\r\n                Authorization: \"JWT \"  + token,\r\n                // Authorization: \"Token \"  + token,\r\n              }\r\n\r\n        }\r\n\r\n        try {\r\n            await axios.put(url, data, requestHeader)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res.status === 200){\r\n                    response = res.data;\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                 throw error.message;\r\n            });\r\n        } catch (error) {\r\n            throw error.message;\r\n        }\r\n\r\n\r\n        return response;\r\n    }\r\n\r\n    const deleteRequest = async ({url, response, data}) => {\r\n\r\n        const requestHeader = {\r\n            headers: {\r\n                Authorization: \"JWT \"  + token,\r\n                // Authorization: \"Token \"  + token,\r\n              }\r\n\r\n        }\r\n        console.log(requestHeader);\r\n\r\n        let message = \"\";\r\n        let severity = \"info\";\r\n\r\n        try {\r\n            await axios.delete(url, requestHeader)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res.status === 200){\r\n                    response = res.data;\r\n                    severity = response.header.responseStatus;\r\n                    message = response.header.responseMessage;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                throw error.message;\r\n            });\r\n        } catch (error) {\r\n            throw error.message;\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    return { post, put , deleteRequest}\r\n }\r\n","export const baseUrl = 'http://actseminary.education'\r\n","import { baseUrl } from \"./BaseUrl\"\r\n\r\nexport const UserUrls = {\r\n    userLogin: baseUrl + \"/auth/login\",\r\n    userContact: baseUrl +  \"/manager/contact\",\r\n    userApplication: baseUrl +  \"/manager/application\",\r\n    Events: baseUrl +  \"/manager/event\",\r\n    SingleEvent: baseUrl + \"/manager/single-event/\",\r\n    EventsActions: baseUrl +  \"/manager/event-actions/\",\r\n    Application: baseUrl +  \"/manager/application\",\r\n    Dashboard: baseUrl +  \"/manager/dashboard\",\r\n    DeleteEvent: baseUrl +  \"/manager/delete-contact/\",\r\n    changePassword: baseUrl + \"/auth/change-password\",\r\n    courses: baseUrl + \"/manager/course-get-create\",\r\n    courseDelete: baseUrl + \"/manager/course-delete-update\",\r\n    staff: baseUrl + \"/manager/stuff-get-create\",\r\n    staffDelete: baseUrl + \"/manager/stuff-delete-update\",\r\n    administration: baseUrl + \"/manager/admin-get-create\",\r\n    administrationDelete: baseUrl + \"/manager/admin-delete-update\",\r\n    mastersFees: baseUrl + \"/manager/masters-cost-get-create\",\r\n    mastersFeesDelete: baseUrl + \"/manager/masters-cost-delete-update\",\r\n    phdFees: baseUrl + \"/manager/phd-cost-get-create\",\r\n    phdFeesDelete: baseUrl + \"/manager/phd-cost-delete-update\",\r\n    siteInfo : baseUrl + \"/manager/important-information-get-create\",\r\n    siteInfoUpdate : baseUrl + \"/manager/important-information-delete-update\",\r\n    gellery : baseUrl + \"/manager/gallery-get-create\",\r\n    gelleryDelete : baseUrl + \"/manager/gallery-delete-update\",\r\n\r\n}\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","setemail","_useState3","_useState4","password","setpassword","_useState5","_useState6","ErrorMsg","setErrorMsg","_useState7","_useState8","loading","setloading","formPost","useFormPost","navigate","useNavigate","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","body","response","localStorageUser","userdata","_error$respose","wrap","_context","prev","next","localStorage","clear","preventDefault","username","post","url","UserUrls","userLogin","data","login","sent","console","log","id","user","role","setItem","JSON","stringify","token","loginAuth","_objectSpread","t0","respose","status","stop","_x","apply","arguments","_jsx","children","className","_jsxs","href","src","logo","alt","action","onSubmit","for","type","name","placeholder","required","value","onChange","e","target","useSelector","selectCurrentToken","_ref2","_ref$login","headers","Authorization","axios","then","res","header","responseStatus","responseMessage","catch","error","abrupt","put","_ref4","_callee2","_ref3","requestHeader","_context2","message","_x2","deleteRequest","_ref6","_callee3","_ref5","_context3","delete","_x3","baseUrl","userContact","userApplication","Events","SingleEvent","EventsActions","Application","Dashboard","DeleteEvent","changePassword","courses","courseDelete","staff","staffDelete","administration","administrationDelete","mastersFees","mastersFeesDelete","phdFees","phdFeesDelete","siteInfo","siteInfoUpdate","gellery","gelleryDelete"],"sourceRoot":""}