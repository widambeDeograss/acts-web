{"version":3,"file":"static/js/399.353dd5fd.chunk.js","mappings":"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","sources":["Pages/ADMINPAGES/StaffEditPage.jsx","hooks/FormDataHoook.js","utils/BaseUrl.js","utils/apis.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogHeader,\r\n  DialogBody,\r\n  DialogFooter,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormPost } from \"../../hooks/FormDataHoook\";\r\nimport { UserUrls } from \"../../utils/apis\";\r\nimport swal from \"sweetalert\";\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\n\r\nconst StaffEditPage = () => {\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const formPost = useFormPost();\r\n    const formRef = useRef(null);\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n  const {state} =useLocation()\r\n  console.log(state);\r\n  \r\n  \r\n    const handleConfirm =async (e) => {\r\n      e.preventDefault();\r\n      setisLoading(true);\r\n  \r\n      const formData = new FormData(formRef.current);\r\n      formData.append(\"id\",  `${params?.id}`);\r\n      const errors = {};\r\n     try {\r\n      const responce =await formPost.post({\r\n        url:UserUrls.staffDelete,\r\n        data:formData\r\n      })\r\n      setisLoading(true);\r\n      if (responce?.update) {\r\n        swal({  \r\n          title: \"Success\",  \r\n          text: \"Staff Edited Successfully!\",  \r\n          icon: \"success\",  \r\n          button: \"OK\", \r\n          confirmButtonClass: \"danger\",  \r\n          confirmButtonText: \"Confirm, remove it!\",  \r\n          closeOnConfirm: false  \r\n        }\r\n        ).then( async (ok) => {\r\n          if (ok) {\r\n            navigate(\"/acts/admin/staff\");\r\n          } else {\r\n            return\r\n          }\r\n   \r\n      }\r\n        )\r\n    }\r\n     } catch (error) {\r\n      setisLoading(true);\r\n      alert(error);\r\n     }\r\n     \r\n      // dispatch(hideModal());\r\n    };\r\n  return (\r\n    <Card>\r\n           <CardHeader floated={false} shadow={false} className=\"rounded-none\">\r\n        <div className=\"mb-2 flex flex-col justify-between gap-8 md:flex-row md:items-center\">\r\n          <div>\r\n            <Typography variant=\"h6\" color=\"blue-gray\" className=\"text-left\">\r\n              {state?.staff}: Edit details\r\n            </Typography>\r\n         \r\n          </div>\r\n         \r\n        </div>\r\n      </CardHeader>\r\n        <CardBody>\r\n        <form onSubmit={handleConfirm} ref={formRef} >\r\n        <div>\r\n            <label\r\n              for=\"first_name\"\r\n              class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300 text-left mt-5\"\r\n            >\r\n              Staff Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"last_name\"\r\n              defaultValue={state?.staff}\r\n              class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n              placeholder=\"\"\r\n              name=\"full_name\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label\r\n              for=\"first_name\"\r\n              class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300  text-left mt-5\"\r\n            >\r\n              Staff Titles\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"last_name\"\r\n              defaultValue={state?.tittle}\r\n              class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n              placeholder=\"\"\r\n              name=\"titles\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label\r\n              for=\"first_name\"\r\n              class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300 text-left mt-5\"\r\n            >\r\n              Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"last_name\"\r\n              class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n              placeholder=\"\"\r\n              name=\"image\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label\r\n              for=\"first_name\"\r\n              class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300 text-left mt-5\"\r\n            >\r\n              Staff Education\r\n            </label>\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"last_name\"\r\n              defaultValue={state?.edu}\r\n              class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 mb-3\"\r\n              placeholder=\"\"\r\n              name=\"education\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <Button variant=\"gradient\" onClick={handleConfirm} type=\"submit\">\r\n            <span>{isLoading?\"Editing Staff...\":\"Edit staff\"}</span>\r\n          </Button>\r\n        </form>\r\n        </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StaffEditPage","import { useState } from \"react\"\r\nimport { selectCurrentToken } from \"../App/AuthSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nexport const useFormManager =  (initialState) => {\r\n    const [formState, setFormState] = useState(initialState);\r\n\r\n    const changeHandler = (event) => {\r\n        setFormState({\r\n            ...formState,\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    const elementChangeHandler = (name, value) => {\r\n        setFormState({\r\n            ...formState,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const reset = () => setFormState(initialState);\r\n\r\n    return { changeHandler, elementChangeHandler, reset, formState };\r\n}\r\n\r\n\r\nexport const useFormPost = () => {\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(selectCurrentToken);\r\n\r\n    const post = async ({url, response, data, login=false}) => {\r\n\r\n        const requestHeader = {\r\n            headers: {\r\n                Authorization: \"Bearer \"  + token,\r\n                // Authorization: \"Token \"  + token,\r\n              }\r\n\r\n        }\r\n\r\n        const requestBody = {\r\n\r\n            data: data,\r\n            // userId: userId\r\n        }\r\n        const request = {\r\n            body: requestBody\r\n        }\r\n\r\n        let message = \"\";\r\n        let severity = \"info\";\r\n\r\n        try {\r\n            await axios.post(url, data)\r\n            .then((res) => {\r\n                if(res.status === 200){\r\n                    response = res.data;\r\n                    severity = response.header.responseStatus;\r\n                    message = response.header.responseMessage;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                // throw error.message;\r\n            });\r\n        } catch (error) {\r\n            // throw error.message;\r\n        }\r\n\r\n\r\n        return response;\r\n    }\r\n\r\n    const put = async ({url, response, data}) => {\r\n\r\n        const requestHeader = {\r\n            headers: {\r\n                Authorization: \"JWT \"  + token,\r\n                // Authorization: \"Token \"  + token,\r\n              }\r\n\r\n        }\r\n\r\n        try {\r\n            await axios.put(url, data, requestHeader)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res.status === 200){\r\n                    response = res.data;\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                 throw error.message;\r\n            });\r\n        } catch (error) {\r\n            throw error.message;\r\n        }\r\n\r\n\r\n        return response;\r\n    }\r\n\r\n    const deleteRequest = async ({url, response, data}) => {\r\n\r\n        const requestHeader = {\r\n            headers: {\r\n                Authorization: \"JWT \"  + token,\r\n                // Authorization: \"Token \"  + token,\r\n              }\r\n\r\n        }\r\n        console.log(requestHeader);\r\n\r\n        let message = \"\";\r\n        let severity = \"info\";\r\n\r\n        try {\r\n            await axios.delete(url, requestHeader)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res.status === 200){\r\n                    response = res.data;\r\n                    severity = response.header.responseStatus;\r\n                    message = response.header.responseMessage;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                throw error.message;\r\n            });\r\n        } catch (error) {\r\n            throw error.message;\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    return { post, put , deleteRequest}\r\n }\r\n","export const baseUrl = 'https://api.actseminary.education'\r\n","import { baseUrl } from \"./BaseUrl\"\r\n\r\nexport const UserUrls = {\r\n    userLogin: baseUrl + \"/auth/login\",\r\n    userContact: baseUrl +  \"/manager/contact\",\r\n    userApplication: baseUrl +  \"/manager/application\",\r\n    Events: baseUrl +  \"/manager/event\",\r\n    SingleEvent: baseUrl + \"/manager/single-event/\",\r\n    EventsActions: baseUrl +  \"/manager/event-actions/\",\r\n    Application: baseUrl +  \"/manager/application\",\r\n    Dashboard: baseUrl +  \"/manager/dashboard\",\r\n    DeleteEvent: baseUrl +  \"/manager/delete-contact/\",\r\n    changePassword: baseUrl + \"/auth/change-password\",\r\n    courses: baseUrl + \"/manager/course-get-create\",\r\n    courseDelete: baseUrl + \"/manager/course-delete-update\",\r\n    staff: baseUrl + \"/manager/stuff-get-create\",\r\n    staffDelete: baseUrl + \"/manager/stuff-delete-update\",\r\n    administration: baseUrl + \"/manager/admin-get-create\",\r\n    administrationDelete: baseUrl + \"/manager/admin-delete-update\",\r\n    mastersFees: baseUrl + \"/manager/masters-cost-get-create\",\r\n    mastersFeesDelete: baseUrl + \"/manager/masters-cost-delete-update\",\r\n    phdFees: baseUrl + \"/manager/phd-cost-get-create\",\r\n    phdFeesDelete: baseUrl + \"/manager/phd-cost-delete-update\",\r\n    siteInfo : baseUrl + \"/manager/important-information-get-create\",\r\n    siteInfoUpdate : baseUrl + \"/manager/important-information-delete-update\",\r\n    gellery : baseUrl + \"/manager/gallery-get-create\",\r\n    gelleryDelete : baseUrl + \"/manager/gallery-delete-update\",\r\n\r\n}\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","isLoading","setisLoading","formPost","useFormPost","formRef","useRef","params","useParams","navigate","useNavigate","state","useLocation","console","log","handleConfirm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","formData","responce","wrap","_context2","prev","next","preventDefault","FormData","current","append","concat","id","post","url","UserUrls","staffDelete","data","sent","update","swal","title","text","icon","button","confirmButtonClass","confirmButtonText","closeOnConfirm","then","_ref2","_callee","ok","_context","abrupt","stop","_x2","apply","arguments","t0","alert","_x","_jsxs","Card","children","_jsx","CardHeader","floated","shadow","className","Typography","variant","color","staff","CardBody","onSubmit","ref","for","class","type","defaultValue","placeholder","name","required","tittle","edu","Button","onClick","useDispatch","token","useSelector","selectCurrentToken","response","_ref$login","login","headers","Authorization","body","axios","res","status","header","responseStatus","responseMessage","catch","error","put","_ref4","_ref3","requestHeader","message","deleteRequest","_ref6","_callee3","_ref5","_context3","delete","_x3","baseUrl","userLogin","userContact","userApplication","Events","SingleEvent","EventsActions","Application","Dashboard","DeleteEvent","changePassword","courses","courseDelete","administration","administrationDelete","mastersFees","mastersFeesDelete","phdFees","phdFeesDelete","siteInfo","siteInfoUpdate","gellery","gelleryDelete"],"sourceRoot":""}